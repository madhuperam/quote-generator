{"version":3,"sources":["App.js","logo.svg","reportWebVitals.js","index.js"],"names":["App","props","state","author","quote","setRandomColor","bind","getRandomQuote","rand","Math","floor","random","text","fetch","then","response","json","data","console","log","document","getElementById","innerHTML","this","setState","color","i","body","style","background","btns","getElementsByClassName","length","className","id","href","target","onClick","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"sPAsFeA,GCtFA,I,wDDMb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACXC,OAAQ,oBACRC,MAAO,+DAET,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBACtB,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,gBAPN,E,6DAWhB,IAAIE,EAAOC,KAAKC,MAAoB,KAAdD,KAAKE,UACvBR,EAAO,GACPS,EAAM,GACVC,MAAM,+BACLC,MAAK,SAASC,GACb,OAAOA,EAASC,UAEjBF,MAAK,SAASG,GACbL,GAAQK,EAAKT,GAAMI,KACnBT,GAAUc,EAAKT,GAAML,OACrBe,QAAQC,IAAIhB,GACZe,QAAQC,IAAIP,GACZQ,SAASC,eAAe,QAAQC,UAAYV,EAC5CQ,SAASC,eAAe,UAAUC,UAAY,KAAKnB,KAErDoB,KAAKC,UAAS,iBAAK,CACjBrB,OAAQA,EACRC,MAAOQ,MAETM,QAAQC,IAAIhB,GACZe,QAAQC,IAAIP,K,uCAOZ,IAFA,IACIa,EAAQ,IACJC,EAAE,EAAEA,EAAE,EAAEA,IACdD,GAHc,mBAGGhB,KAAKC,MAAoB,GAAdD,KAAKE,WAEtB,YAAVc,IACDA,EAAQ,WAEVF,KAAKhB,iBACLa,SAASO,KAAKC,MAAMC,WAAaJ,EACjCL,SAASO,KAAKC,MAAMH,MAAQA,EAC5B,IAAIK,EAAOV,SAASW,uBAAuB,WAC3C,IAAQL,EAAE,EAAEA,EAAEI,EAAKE,OAAON,IACxBI,EAAKJ,GAAGE,MAAMC,WAAaJ,I,+BAI7B,OACE,sBAAKQ,UAAU,MAAf,UACA,qBAAKC,GAAG,YAAR,SACE,sBAAKD,UAAU,UAAf,UAEE,sBAAKC,GAAG,WAAR,UACE,mBAAGD,UAAU,sBAAsB,mBAAGC,GAAG,OAAN,4EAErC,qBAAKA,GAAG,SAAR,+BAGA,sBAAKA,GAAG,UAAR,UACE,mBAAGC,KAAK,mCAAmCD,GAAG,cAAcE,OAAO,SAAnE,SAA4E,wBAAQH,UAAU,gCAAlB,SAAkD,mBAAGA,UAAU,uBAC3I,mBAAGE,KAAK,wBAAwBD,GAAG,aAAaE,OAAO,SAAvD,SAAgE,wBAAQH,UAAU,gCAAlB,SAAkD,mBAAGA,UAAU,wBAC/H,wBAAQC,GAAG,YAAYD,UAAU,0BAA0BI,QAASd,KAAKlB,eAAzE,+BAKN,qBAAK4B,UAAU,QAAf,SACE,uE,GA1EUK,IAAMC,YEOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9B,SAASC,eAAe,SAM1BmB,M","file":"static/js/main.0bc605d4.chunk.js","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      author: \"- Albert Einstein\",\n      quote: \"A person who never made a mistake never tried anything new.\"\n    }\n    this.setRandomColor = this.setRandomColor.bind(this);\n    this.getRandomQuote = this.getRandomQuote.bind(this);\n  }\n\n  getRandomQuote(){\n    let rand = Math.floor(Math.random()*1643);\n    let author=\"\";\n    let text =\"\";\n    fetch(\"https://type.fit/api/quotes\")\n    .then(function(response) {\n      return response.json();\n    })\n    .then(function(data) {\n      text += data[rand].text;\n      author += data[rand].author;\n      console.log(author);\n      console.log(text);\n      document.getElementById(\"text\").innerHTML = text;\n      document.getElementById(\"author\").innerHTML = \"- \"+author;\n    });\n    this.setState(()=>({\n      author: author,\n      quote: text\n    }));\n    console.log(author);\n    console.log(text);\n\n  }\n\n  setRandomColor(){\n    const letters = '0123456789ABCDEF';\n    let color = \"#\";\n    for(var i=0;i<6;i++){\n      color += letters[Math.floor(Math.random()*16)];\n    }\n    if(color === \"#ffffff\"){\n      color = \"#ff4dc4\";\n    }\n    this.getRandomQuote();\n    document.body.style.background = color;\n    document.body.style.color = color;\n    var btns = document.getElementsByClassName(\"buttons\");\n    for(var i=0;i<btns.length;i++){\n      btns[i].style.background = color;\n    }\n  }\n  render(){\n    return(\n      <div className=\"App\">\n      <div id=\"quote-box\">\n        <div className=\"content\">\n\n          <div id=\"text-box\">\n            <i className=\"fas fa-quote-left\" /><p id=\"text\">A person who never made a mistake never tried anything new.</p>\n          </div>\n          <div id=\"author\">\n            - Albert Einstein\n          </div>\n          <div id=\"buttons\">\n            <a href=\"https://twitter.com/intent/tweet\" id=\"tweet-quote\" target=\"_blank\"><button className=\"btn btn-default buttons posts\"><i className=\"fab fa-twitter\"/></button></a>\n            <a href=\"https://facebook.com/\" id=\"post-quote\" target=\"_blank\"><button className=\"btn btn-default buttons posts\"><i className=\"fab fa-facebook\"/></button></a>\n            <button id=\"new-quote\" className=\"btn btn-default buttons\" onClick={this.setRandomColor}>New quote</button>\n          </div>\n        </div>\n\n      </div>\n      <div className=\"coder\">\n        <strong>Coded by Madhurima Peram</strong>\n      </div>\n      </div>\n    );\n  };\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}