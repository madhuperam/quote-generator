[{"C:\\Users\\MAPERAM\\Desktop\\madhu\\web development\\projects\\quote_machine\\src\\reportWebVitals.js":"1","C:\\Users\\MAPERAM\\Desktop\\madhu\\web development\\projects\\quote_machine\\src\\App.js":"2"},{"size":362,"mtime":499162500000,"results":"3","hashOfConfig":"4"},{"size":2496,"mtime":1606927528209,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1du0fzh",{"filePath":"8","messages":"9","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"C:\\Users\\MAPERAM\\Desktop\\madhu\\web development\\projects\\quote_machine\\src\\reportWebVitals.js",[],"C:\\Users\\MAPERAM\\Desktop\\madhu\\web development\\projects\\quote_machine\\src\\App.js",["11","12","13","14"],"import logo from './logo.svg';\nimport './App.css';\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      author: \"- Albert Einstein\",\n      quote: \"A person who never made a mistake never tried anything new.\"\n    }\n    this.setRandomColor = this.setRandomColor.bind(this);\n    this.getRandomQuote = this.getRandomQuote.bind(this);\n  }\n\n  getRandomQuote(){\n    let rand = Math.floor(Math.random()*1643);\n    let author=\"\";\n    let text =\"\";\n    fetch(\"https://type.fit/api/quotes\")\n    .then(function(response) {\n      return response.json();\n    })\n    .then(function(data) {\n      text += data[rand].text;\n      author += data[rand].author;\n      console.log(author);\n      console.log(text);\n      document.getElementById(\"text\").innerHTML = text;\n      document.getElementById(\"author\").innerHTML = \"- \"+author;\n    });\n    this.setState(()=>({\n      author: author,\n      quote: text\n    }));\n    console.log(author);\n    console.log(text);\n\n  }\n\n  setRandomColor(){\n    const letters = '0123456789ABCDEF';\n    let color = \"#\";\n    for(var i=0;i<6;i++){\n      color += letters[Math.floor(Math.random()*16)];\n    }\n    if(color === \"#ffffff\"){\n      color = \"#ff4dc4\";\n    }\n    this.getRandomQuote();\n    document.body.style.background = color;\n    var btns = document.getElementsByClassName(\"buttons\");\n    for(var i=0;i<btns.length;i++){\n      btns[i].style.background = color;\n    }\n  }\n  render(){\n    return(\n      <div className=\"App\">\n      <div id=\"quote-box\">\n        <div className=\"content\">\n          <div id=\"text\">\n            A person who never made a mistake never tried anything new.\n          </div>\n          <div id=\"author\">\n            - Albert Einstein\n          </div>\n          <div id=\"buttons\">\n            <a href=\"https://twitter.com/intent/tweet\" id=\"tweet-quote\" target=\"_blank\"><button className=\"btn btn-default buttons posts\"><i className=\"fab fa-twitter\"/></button></a>\n            <a href=\"https://facebook.com/\" id=\"post-quote\" target=\"_blank\"><button className=\"btn btn-default buttons posts\"><i className=\"fab fa-facebook\"/></button></a>\n            <button id=\"new-quote\" className=\"btn btn-default buttons\" onClick={this.setRandomColor}>New quote</button>\n          </div>\n        </div>\n\n      </div>\n      <div className=\"coder\">\n        <strong>Coded by Madhurima Peram</strong>\n      </div>\n      </div>\n    );\n  };\n}\n\nexport default App;\n",{"ruleId":"15","severity":1,"message":"16","line":1,"column":8,"nodeType":"17","messageId":"18","endLine":1,"endColumn":12},{"ruleId":"15","severity":1,"message":"19","line":4,"column":8,"nodeType":"17","messageId":"18","endLine":4,"endColumn":16},{"ruleId":"20","severity":1,"message":"21","line":54,"column":13,"nodeType":"17","messageId":"22","endLine":54,"endColumn":14},{"ruleId":"23","severity":1,"message":"24","line":70,"column":73,"nodeType":"25","endLine":70,"endColumn":88},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","no-redeclare","'i' is already defined.","redeclared","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute"]